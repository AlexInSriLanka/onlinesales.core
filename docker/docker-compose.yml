version: '3.4'

services:
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.6
    ports:
      - 9200:9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/datafile
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    networks:
      - onlinesalesnetwork

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.17.6
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://localhost:9200
    networks:
      - onlinesalesnetwork

  postgres:
    container_name: postgres
    image: postgres:14.5
    environment:
      POSTGRES_DB: ${PG_DB}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PWD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - onlinesalesnetwork

  onlinesales:
    image: ${DOCKER_REGISTRY-}onlinesales
    build:
      context: .
      dockerfile: ../src/OnlineSales/Dockerfile
    networks:
      - onlinesalesnetwork

networks:
  onlinesalesnetwork:
    driver: bridge

volumes:
  elasticsearch-data:
  postgres-data: